openapi: "3.0.2"
info:
  title: Case A and B Diary related APIs
  description: This API specification defines the various APIs that are used to manage the A and B diaries. A diary is daily diary for everything happening in a Judge's court. So is specific to a judge and date. B diary is a diary specific to a Judge and a case. It tracks all actions happening in a case.
  version: "1.0"
tags:
  - name: Case Diaries
paths:
  /case/dairy/v1/create:
    get:
      responses:
        '200':
          description: OK
  /case/diary/v1/update:
  /case/diary/v1/{tenantID}/pdf:
    get:
      tags:
        - Case Diaries
      summary: get the fileStoreID for case dairy PDF
      description: The API is used to get the fileStoreID of the PDF for the case diary. example - GET /case/diary/v1/KL/pdf?
      operationId: getCaseDairyPDF
      parameters:
        - name: tenantID
          in: path
          description: tenant ID
          required: true
          schema:
            type: string
            pattern: "^[a-zA-Z]{2}$"
            maxLength: 2
            minLength: 2
      responses:
        '200':
          description: ResponseInfo with case diary PDF fileStoreId
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CaseDiaryResponse'
        '400':
          description: querying case summary failed
          content:
            'application/json':
              schema:
                $ref: https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/ErrorRes

components:
  schemas:
    CaseDiaryResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/ResponseInfo
        caseSummary:
          $ref: '#/components/schemas/CaseDiary'

    CaseDiary:
      type: object
      properties:
        ID:
          type: string
          description: primary key to identify the entity
          format: uuid
          minLength: 36
          maxLength: 36
          readOnly: true
        entries:
          type: array
          description: individual row for the A/B diary
          items:
            $ref: "#/components/schemas/CaseDiaryEntry"

    CaseDiaryEntry:
      type: object
      required:
        - ID
        - diaryID
        - date
      properties:
        ID:
          type: string
          description: primary key to identify the entity
          format: uuid
          minLength: 36
          maxLength: 36
          readOnly: true
        diaryID:
          type: string
          description: reference ID of the diary to which this diary entry belongs to
          format: uuid
          minLength: 36
          maxLength: 36
        date:
          type: integer
          format: int64
          description: EPOCH date time (in milliseconds) when the entry was created. While we store date time, but while displaying, we will mostly only use the Date part of it
        businessOfDay:
          type: string
          description: the business of the day that is being recorded for the diary
        hearingDate:
          type: integer
          format: int64
          description: EPOCH date time (in milliseconds) of the next hearing date


    CaseDiaryHistory:
      type: object
      properties:
        ID:
          type: string
          description: primary key to identify the entity
          format: uuid
          minLength: 36
          maxLength: 36
          readOnly: true
        date:
          type: integer
          format: int64
          description: EPOCH date time (in milliseconds) for the diary


