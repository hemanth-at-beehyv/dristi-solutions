openapi: "3.0.2"
info:
  title: Case A and B Diary related APIs
  description: This API specification defines the various APIs that are used to manage the A and B diaries. A diary is daily diary for everything happening in a Judge's court. So is specific to a judge and date. B diary is a diary specific to a Judge and a case. It tracks all actions happening in a case.
  version: "1.0"
tags:
  - name: Case Diaries
paths:

  /case/dairy/v1/addDiaryEntry:
    post:
      tags:
        - Case Diaries
      summary: add an entry to the diary. If no diary exists, first create an entry and then insert diary entry. Mostly to be used for A Diary
      requestBody:
        description: Details for the new diary entry + RequestInfo meta data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CaseDiaryRequest'
      responses:
        "201":
          description: ResponseInfo with order(s) updated successfully
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CaseDiaryResponse'
        "400":
          description: order(s) creation failed
          content:
            'application/json':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ErrorResponse'
  /case/diary/v1/search:
    post:
      tags:
        - Case Diaries
      summary: get the list of diaries based on input parameters
      requestBody:
        description: Details for the search of diaries + RequestInfo meta data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CaseDiarySearchRequest'
        required: true
      responses:
        "200":
          description: ResponseInfo with Case Diary list
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CaseDiaryListResponse'
        "400":
          description: failed to find order(s)
          content:
            'application/json':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ErrorResponse'


  /case/diary/v1/{tenantId}/{judgeID}/{diaryType}:
    get:
      tags:
        - Case Diaries
      description: The API is used to get the fileStoreID of the published (signed) PDF for the case A diary. example - GET /case/diary/v1/KL/pdf?
      operationId: getCaseDairyStoreId
      parameters:
        - name: tenantID
          in: path
          description: tenant ID
          required: true
          schema:
            type: string
            pattern: "^[a-zA-Z]{2}$"
            maxLength: 2
            minLength: 2
        - name: judgeID
          in: path
          description: the ID of the Judge, whose diary is being queried
          required: true
          schema:
            type: string
            enum: [ "ADiary", "BDiary" ]
        - name: diaryType
          in: path
          description: the type of the diary i.e. A diary or B diary
          required: true
          schema:
            type: string
            enum: ["ADiary", "BDiary"]
        - name: date
          in: query
          required: false
          description: the date for which we want the diary in EPOCH format, but with time component set to 0. This will be mostly used in case we are searching A diary
          schema:
            type: integer
            format: int64
        - name: caseID
          in: query
          required: false
          description: the caseID for which we want the diary. This will be mostly used in case we are searching for B diary
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: respond with case diary PDF fileStoreId of signed PDF
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CaseDiaryResponse'
        '400':
          description: querying case summary failed
          content:
            'application/json':
              schema:
                $ref: https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/ErrorRes

  /case/dairy/v1/generate:
    post:
      tags:
        - Case Diaries
      summary: Generate the PDF for the diary, store it and return the PDF's file store ID. This will be the unsigned PDF
      requestBody:
        description: Details for diary whose PDF is being created + RequestInfo meta data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CaseDiaryRequest'
      responses:
        "201":
          description: ResponseInfo with order(s) updated successfully
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CaseDiaryResponse'
        "400":
          description: order(s) creation failed
          content:
            'application/json':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ErrorResponse'

  /case/diary/v1/update:
    post:
      tags:
        - Case Diaries
      summary: update the case diary. In most cases the update call will be to update the signed fileStore ID
      requestBody:
        description: Details for diary whose PDF is being created + RequestInfo meta data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CaseDiaryRequest'
      responses:
        "201":
          description: ResponseInfo with order(s) updated successfully
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CaseDiaryResponse'
        "400":
          description: order(s) creation failed
          content:
            'application/json':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ErrorResponse'

components:
  schemas:
    CaseDiaryRequest:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        diaryUpdate:
          $ref: '#/components/schemas/CaseDiary'

    CaseDiaryResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/ResponseInfo
        fileStoreID:
          type: string
          description: file store ID of the case diary. it will be regular PDF ID when responding to addDiaryEntry API, but will be signed PDF ID when responding to update method

    CaseDiarySearchRequest:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        criteria:
          $ref: '#/components/schemas/CaseDiarySearchCriteria'
        pagination:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/Pagination'

    CaseDiaryListResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/ResponseInfo
        caseSummary:
          type: array
          items:
            $ref: '#/components/schemas/CaseDiaryItem'

    CaseDiary:
      type: object
      required:
        - tenantId
        - diaryDate
        - judgeId
      properties:
        ID:
          type: string
          description: primary key to identify the entity
          format: uuid
          minLength: 36
          maxLength: 36
          readOnly: true
        tenantId:
          type: string
          description: This is tenantId of the case
        caseId:
          type: string
          description: The case for which this diary is created in case of B Diary. For A diary this field will be null
        diaryDate:
          type: integer
          format: int64
          description: EPOCH date, with time as 00:00:00 for the diary
        diaryType:
          type: string
          description: Master data ID the type of diary -ADiary or BDiary or something else in future
          example: ADiary, BDiary
        judgeId:
          type: string
          description: ID is the Judge for whom this diary is being managed
        documents:
          type: array
          description: array of PDF document fileStore IDs, where documentType will have help identify if it is signed or unsigned
          example: documentType = casediary.signed / casediary.unsigned
          items:
            $ref: https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/Document
        diaryEntries:
          type: array
          items:
            $ref: "#/components/schemas/CaseDiaryEntry"
        additionalDetails:
          type: object
          description: This field is meant to hold any extra information that we want to store from V2 version. It is not meant to be used in V1.
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'


    CaseDiaryEntry:
      type: object
      required:
        - ID
        - tenantId
        - diaryID
        - date
        - businessOfDay
      properties:
        ID:
          type: string
          description: primary key to identify the entity
          format: uuid
          minLength: 36
          maxLength: 36
          readOnly: true
        tenantId:
          type: string
          description: This is tenantId of the case
        diaryID:
          type: string
          description: reference ID of the CaseDiary entity to which this diary entry belongs to
          format: uuid
          minLength: 36
          maxLength: 36
        entryDate:
          type: integer
          format: int64
          description: EPOCH date (time is 00:00:00) when the entry was created. All diary operations are only with date, and we don't need time. Setting time to 0, helps compare two values for same date.
        businessOfDay:
          type: string
          description: the business of the day that is being recorded for the diary
        hearingDate:
          type: integer
          format: int64
          description: EPOCH date time (in milliseconds) of the next hearing date. This will come from the Order or Hearing object (depending on where the API will get called)
        additionalDetails:
          type: object
          description: This field is meant to hold any extra information that we want to store from V2 version. It is not meant to be used in V1.
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'


    CaseDiaryItem:
      type: object
      description: this entity is only for use by API. it is not stored in DB, but is filled by getting data from DB
      properties:
        dairyID:
          type: string
          description: primary key to identify the entity
          format: uuid
          minLength: 36
          maxLength: 36
          readOnly: true
        tenantId:
          type: string
          description: This is tenantId of the case
        date:
          type: integer
          format: int64
          description: EPOCH date, with time as 00:00:00 for the diary
        diaryType:
          type: string
          description: Master data ID the type of diary -A or B or something else in future
          example: ADiary, BDiary
        fileStoreID:
          type: string
          description: file store ID for the signed version of the PDF for the diary

    CaseDiarySearchCriteria:
      type: object
      properties:
        tenantId:
          type: string
          description: This is tenantId of the case
        date:
          type: integer
          format: int64
          description: EPOCH date, with time as 00:00:00 for the diary
        diaryType:
          type: string
          description: Master data ID the type of diary -A or B or something else in future
          example: ADiary, BDiary
        judgeId:
          type: string
          description: ID is the Judge for whom this diary is being managed
